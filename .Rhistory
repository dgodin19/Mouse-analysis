shiny::runApp('GitHub/GSHackathon')
shiny::runApp('GitHub/GSHackathon')
runApp('Genetics/AppTry2')
shiny::runApp('GitHub/GSHackathon')
runApp('GitHub/GSHackathon')
shiny::runApp('GitHub/GSHackathon')
install.packages("Gviz")
install.packages("Rtools")
browseVignettes("Gviz")
library(GenomicRanges)
data(cpgIslands)
library(Gviz)
data(cpgIslands)
class(cpgIslands)
chr <- as.character(unique(seqnames(cpgIslands)))
gen <- genome(cpgIslands)
atrack <- AnnotationTrack(cpgIslands, name = "CpG")
plotTracks(atrack)
gtrack <- GenomeAxisTrack()
plotTracks(list(gtrack, atrack))
itrack <- IdeogramTrack(genome = gen, chromosome = chr)
plotTracks(list(itrack, gtrack, atrack))
data(geneModels)
grtrack <- GeneRegionTrack(geneModels, genome = gen,
chromosome = chr, name = "Gene Model")
plotTracks(list(itrack, gtrack, atrack, grtrack))
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
pkgs = c("DESeq2", "edgeR", "gplots", "tximport", "biomaRt")
BiocManager::install(pkgs)
library(BiocParallel)
paralle::detectCores()
parallel::detectCores()
library(Matrix)
package_version("R")
packageVersion("R")
setwd("//wsl.localhost/Ubuntu/home/djdennis/mouse")
library(Rsubread)
library(edgeR)
files <- c(
"/home/djdennis/mouse/bam/kpc_control_1.bam",
"/home/djdennis/mouse/bam/kpc_control_2.bam",
"/home/djdennis/mouse/bam/kpc_control_3.bam",
"/home/djdennis/mouse/bam/kpc_knockdown_1.bam",
"/home/djdennis/mouse/bam/kpc_knockdown_2.bam",
"/home/djdennis/mouse/bam/kpc_knockdown_3.bam"
)
fc <- featureCounts(files, annot.ext="/home/djdennis/mouse/refs/mouse_modified.gff", isGTFAnnotationFile=TRUE)
files <- c(
"/home/djdennis/mouse/bam/kpc_control_1.sorted.bam",
"/home/djdennis/mouse/bam/kpc_control_2.sorted.bam",
"/home/djdennis/mouse/bam/kpc_control_3.sorted.bam",
"/home/djdennis/mouse/bam/kpc_knockdown_1.sorted.bam",
"/home/djdennis/mouse/bam/kpc_knockdown_2.sorted.bam",
"/home/djdennis/mouse/bam/kpc_knockdown_3.sorted.bam"
)
fc <- featureCounts(files, annot.ext="/home/djdennis/mouse/refs/mouse_modified.gff", isGTFAnnotationFile=TRUE)
y <- featureCounts2DGEList(fc)
Genotype <- factor(c("Control","Control","Control","KD","KD","KD"))
design <- model.matrix(~Genotype)
keep <- filterByExpr(y,design)
y2 <- y[keep,,keep.lib.size=FALSE]
y2 <- normLibSizes(y2)
fit <- glmQLFit(y2,design)
q <- glmQLFTest(fit)
topTags(q)
normalized_counts <- cpm(y2)
write.csv(normalized_counts, file = "normalized_counts.csv")
write.csv(fc$counts, file = "raw_feature_counts.csv")
head(y)
head(q)
colnames(q)
top_genes <- topTags(q, n = Inf)$table
normalized_counts <- as.data.frame(cpm(y2))
top_genes$GeneID <- rownames(top_genes)
normalized_counts$GeneID <- rownames(normalized_counts)
merged_data <- merge(top_genes, normalized_counts, by = "GeneID")
head(merged_data)
write.csv(merged_data, file = "deseq_normalized_merged.csv", row.names = FALSE)
